Documentation of the pySIDES code
=======

pySIDES is the new Python version of the Simulated Infrared Dusty Extragalactic Sky (SIDES). This code generates mock catalogs of galaxies in the (sub-)millimeter domain and associates spectral cubes (e.g., for intensity mapping experiments). It produces both continuum and CO, [CII], and [CI] line emission . The scientific paper describing the continuum model and its validation is `Béthermin et al. (2017)`__. The line emission is described in Bethermin et al. (2022).

__ https://ui.adsabs.harvard.edu/abs/2017A%26A...607A..89B/abstract

Developers of the code itself (does not include scientific contributors listed in the papers):
Matthieu Béthermin, Mathilde Van Cuyck, Alexandre Beelen, Athanasia Gkogkou

How is the repository organized?
------

The PYSIDES folder contains all the machinery of pySIDES. Inside this, there are a couple of scripts to generate catalogs of cubes and Jupyter notebooks used to validate the results. The pysides sub-folder contains the actual code with the routine used to generate galaxy properties. The PAR_FILES sub-folder contains the parameter files used to run the standard simulations and produce the CONCERTO-like standard cubes. OUTPUTS will contain the results of the runs if standard parameters are used.

The LINEPLOT directory contains the codes used to validate the line emission recipes of the standard simulation. If you are just interested to produce mock catalog with standard parameters, you do not care about it. But, it can save you time, if you want to validate your own modified line recipes.

How to generate a catalog without clustering?
------

Before the first use and if you want to generate photometric products, you need to regenerate the filter grids which is the way of deriving efficiently the fluxes as a function of Umean, z, and the galaxy type. You can do this by running the following script: PYSIDES/pysides/SEDfiles/gen_useful_filter_grids.py.

To generate a catalog without clustering, you just need to run the gen_psysides_cat.py script. By default, this script will generate the galaxy properties using parameters in PAR_FILES/SIDES_unclustered_1deg2_standard.par. You will probably have to modify the path the script and pysides_path in the parameter file. You can also use the keyword force_pysides_path = '/my/path/to/PYSIDES' in load_params if you do not want to modify the paramater file. You also may use your own custom parameter file. If so, you should change the path of files read by the load_params function.

The most obvious parameters to modify are field_size, output_path, run_name. The gen_pickle and gen_fits parameters allow you to choose, which type of output you want to produce. The pickle option produces a pickle file containing the pandas object, where the catalog is stored. It can be very convenient for quick tests.

If you want to compute different monochromatic continuum fluxes or broadband filter fluxes, you can modify lambda_list (in micron) and/or filter_list (name of the filters, see below how to generate new ones).

Note: You may need to rerun the convertidlsave_2_txt.py and generate_LFIR_LIR_ratio_grids.py script in pysides/SED_files to regenerate pickle and txt SED files from the old IDL save files and produce the grids of LFIR/LIR ratios. Pickled files are sometimes not compatible from one system to another.

How to generate a catalog with clustering?
------

The procedure is similar as for the unclustered catalog, except that you have to load a catalog containing the 'redshift', 'ra', 'dec', 'Mhalo', 'Mstar' columns in a pandas object before producing IR properties. This is done by the gen_pysides_from_original.py script.

By default, you can load the 2 sq deg simulation of the original SIDES published in 2017 (coded in IDL). The CSV file can be downloaded at this `address`__. Do not forget to modify csv_idl_path to have the correct path.

__ https://cesamsi.lam.fr/server/download-file/catalogue_2017/SIDES_Bethermin2017_short.csv.gz

If you want to use another dark-matter simulation, you have to produce a piece of code doing something equivalent to line 10 to 14 of gen_pysides_from_original.py. The critical part is to perform an abundance matching producing the exact same stellar mass function as used in Béthermin et al. 2017 (also generated by gen_mass.py in the pysides folder and used by the unclustered version). If the stellar mass function is not the same, the IR properties may not be well reproduced.

How to generate a cube?
------

An example of script to generate a cube for the CONCERTO experiment is provided: gen_CONCERTO_cubes.py. To generate a cube you need to load both the parameter file used to generate the catalog (e.g., PAR_FILES/SIDES_from_original.par) and the parameter file of the cube/instrument (e.g., PAR_FILES/CONCERTO_cubes.par). The cube generator can produce simulations smoothed or not by the beam (assuming a Gaussian beam with FWHM = 1.22 lambda/D). No noise is included in these simulations.

The parameters in CONCERTO_cubes.par provide the pixel size, the size of the telescope, the frequency range and spectral resolution. You can produce cubes in various units with and/or without beam. The slowest step of the process is the beam smoothing. Use it only if you need it. You can generate cubes with the De Looze et al. and/or the Lagache et al. relation between SFR and L[CII]. Finally, you can decide, which cubes you want to save (each transition, each species, all lines, continuum only, and/or everything). The flux of a line is placed in a single spectral element (no line width taken into account) and resolutions better than 1 GHz should be used with caution.

How to add new broadband filters?
------

You just need to add the filter in pysides/SEDfiles/FILTERS/ as txt file with lambda in micron as first column and the transmission (tnu) as second column. Then add this filter in generate_useful_filter_grid.py and run the script. The code can be slow if you have a very finely sampled transmission curve.

Examples of scripts
------

We provide some example scripts, which can be adapted to produce your own custom products.

- gen_pysides_cat.py: Script to generate a 1 deg2 simulation without clustering.

- gen_pysides_from_original.py: Script to generate luminous properties to the base catalog of the SIDES-Bolshoi run (Béthermin et al. 2017). You need to download SIDES_Bethermin2017_short.csv at https://cesamsi.lam.fr/server/download-file/catalogue_2017/SIDES_Bethermin2017_short.csv.gz.

- gen_CONCERTO_cubes.py: Generate simulated CONCERTO cubes without noise from the catalog generated by the previous script.

- gen_CONCERTO_cubes_masked.py: Generate simulated CONCERTO cubes without including the known sources (see Sect. 5.4 of Bethermin et al. 2022).

- gen_Herschel_maps.py: Generate the Herschel maps from the catalogs.

The scripts tagged as uchuu correspond to another analysis, which will be released later.

Contact
------
If you have any question, please contact `Matthieu Béthermin`__.

__ mailto:matthieu.bethermin@lam.fr

Acknowledgments
------

This project has received funding from the European Research Council (ERC) under the European Union’s Horizon 2020 research and innovation programme (grant agreement No 788212). It also received support from the Excellence Initiative of Aix-Marseille University-AMidex, a French "Investissements d’Avenir.
